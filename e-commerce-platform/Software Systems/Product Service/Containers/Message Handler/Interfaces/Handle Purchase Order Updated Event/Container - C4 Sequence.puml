@startuml
!include ..\..\..\..\..\..\.c4s\C4_Sequence.puml

title Product Service - Message Handler - Handle Purchase Order Updated Event - C4 Sequence - Container level

System_Ext(C4InterFlow.SoftwareSystems.ExternalSystem, "External", "")

System_Boundary(ECommercePlatform.SoftwareSystems.ProductService, "Product Service")
    Container(ECommercePlatform.SoftwareSystems.ProductService.Containers.MessageHandler, "Message Handler", "", "")
    Container(ECommercePlatform.SoftwareSystems.ProductService.Containers.Database, "Database", "", "")
    Container(ECommercePlatform.SoftwareSystems.ProductService.Containers.Messaging, "Messaging", "", "")
Boundary_End()

System_Boundary(ECommercePlatform.SoftwareSystems.BuyingService, "Buying Service")
    Container(ECommercePlatform.SoftwareSystems.BuyingService.Containers.Messaging, "Messaging", "", "")
Boundary_End()

Rel(C4InterFlow.SoftwareSystems.ExternalSystem, ECommercePlatform.SoftwareSystems.ProductService.Containers.MessageHandler, "Handle Purchase Order Updated Event")
Rel(ECommercePlatform.SoftwareSystems.ProductService.Containers.MessageHandler, ECommercePlatform.SoftwareSystems.BuyingService.Containers.Messaging, "Receive Purchase Order Updated Event")
loop For each Product in Purchase Order
Rel(ECommercePlatform.SoftwareSystems.ProductService.Containers.MessageHandler, ECommercePlatform.SoftwareSystems.ProductService.Containers.Database, "Select Products")
alt Product Not Found
Rel(ECommercePlatform.SoftwareSystems.ProductService.Containers.MessageHandler, ECommercePlatform.SoftwareSystems.ProductService.Containers.Database, "Insert Product")
Rel(ECommercePlatform.SoftwareSystems.ProductService.Containers.MessageHandler, ECommercePlatform.SoftwareSystems.ProductService.Containers.Messaging, "Send Product Created Event")
end
end


@enduml
