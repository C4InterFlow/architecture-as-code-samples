@startuml
!include ..\..\.c4s\C4_Container.puml

AddElementTag("state:new", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing="False")
AddElementTag("state:changed", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing="False")
AddElementTag("state:removed", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing="False")

AddRelTag("state:new", $textColor=green, $lineColor=green)
AddRelTag("state:changed", $textColor=orange, $lineColor=orange)
AddRelTag("state:removed", $textColor=red, $lineColor=red)

SHOW_PERSON_PORTRAIT()
LAYOUT_TOP_DOWN()

skinparam linetype polyline

title Storefront Bff - C4 - Container level

System(ECommercePlatform.SoftwareSystems.StorefrontBff, "Storefront Bff", "")

System_Boundary(ECommercePlatform.SoftwareSystems.ProductService, "Product Service") {
    Container(ECommercePlatform.SoftwareSystems.ProductService.Containers.Api, "Api", "", "")
    Container(ECommercePlatform.SoftwareSystems.ProductService.Containers.Database, "Database", "", "")
}

System_Boundary(ECommercePlatform.SoftwareSystems.SearchService, "Search Service") {
    Container(ECommercePlatform.SoftwareSystems.SearchService.Containers.Api, "Api", "", "")
    Container(ECommercePlatform.SoftwareSystems.SearchService.Containers.Database, "Database", "", "")
}

System_Boundary(ECommercePlatform.SoftwareSystems.BasketService, "Basket Service") {
    Container(ECommercePlatform.SoftwareSystems.BasketService.Containers.Api, "Api", "", "")
    Container(ECommercePlatform.SoftwareSystems.BasketService.Containers.Database, "Database", "", "")
}

System_Boundary(ECommercePlatform.SoftwareSystems.OrderService, "Order Service") {
    Container(ECommercePlatform.SoftwareSystems.OrderService.Containers.Api, "Api", "", "")
    Container(ECommercePlatform.SoftwareSystems.OrderService.Containers.Database, "Database", "", "")
    Container(ECommercePlatform.SoftwareSystems.OrderService.Containers.Messaging, "Messaging", "", "")
}

Rel(ECommercePlatform.SoftwareSystems.StorefrontBff, ECommercePlatform.SoftwareSystems.ProductService.Containers.Api, "Get Products")
Rel(ECommercePlatform.SoftwareSystems.ProductService.Containers.Api, ECommercePlatform.SoftwareSystems.ProductService.Containers.Database, "Select Products")
Rel(ECommercePlatform.SoftwareSystems.StorefrontBff, ECommercePlatform.SoftwareSystems.SearchService.Containers.Api, "Search Products")
Rel(ECommercePlatform.SoftwareSystems.SearchService.Containers.Api, ECommercePlatform.SoftwareSystems.SearchService.Containers.Database, "Select Products")
Rel(ECommercePlatform.SoftwareSystems.StorefrontBff, ECommercePlatform.SoftwareSystems.BasketService.Containers.Api, "Get Items\nAdd Item\nUpdate Item\nDelete Item\nDelete Basket")
Rel(ECommercePlatform.SoftwareSystems.BasketService.Containers.Api, ECommercePlatform.SoftwareSystems.BasketService.Containers.Database, "Select Items\nInsert Item\nUpdate Item\nDelete Item\nDelete Basket")
Rel(ECommercePlatform.SoftwareSystems.StorefrontBff, ECommercePlatform.SoftwareSystems.OrderService.Containers.Api, "Create Order")
Rel(ECommercePlatform.SoftwareSystems.OrderService.Containers.Api, ECommercePlatform.SoftwareSystems.OrderService.Containers.Database, "Insert Order")
Rel(ECommercePlatform.SoftwareSystems.OrderService.Containers.Api, ECommercePlatform.SoftwareSystems.OrderService.Containers.Messaging, "Send Order Created Event")


SHOW_LEGEND()
@enduml
