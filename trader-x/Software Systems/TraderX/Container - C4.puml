@startuml
!include ..\..\.c4s\C4_Container.puml

AddElementTag("state:new", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing="False")
AddElementTag("state:changed", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing="False")
AddElementTag("state:removed", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing="False")

AddRelTag("state:new", $textColor=green, $lineColor=green)
AddRelTag("state:changed", $textColor=orange, $lineColor=orange)
AddRelTag("state:removed", $textColor=red, $lineColor=red)

SHOW_PERSON_PORTRAIT()
LAYOUT_TOP_DOWN()

skinparam linetype polyline

title TraderX - C4 - Container level


System_Boundary(TraderX.SoftwareSystems.TraderX, "TraderX") {
    ContainerDb(TraderX.SoftwareSystems.TraderX.Containers.TraderXDB, "TraderX DB", "", "Database which stores account")
    ContainerQueue(TraderX.SoftwareSystems.TraderX.Containers.TradeFeed, "Trade Feed", "", "Message bus for streaming updates to trades and positions")
    Container(TraderX.SoftwareSystems.TraderX.Containers.TradeProcessor, "Trade Processor", "", "Process incoming trade requests")
    Container(TraderX.SoftwareSystems.TraderX.Containers.WebClient, "Web Client", "", "Browser based web interface for TraderX")
    Container(TraderX.SoftwareSystems.TraderX.Containers.WebGUI, "Web GUI", "", "Allows employees to manage accounts and book trades")
    Container(TraderX.SoftwareSystems.TraderX.Containers.ReferenceDataService, "Reference Data Service", "", "Service which provides reference data")
    Container(TraderX.SoftwareSystems.TraderX.Containers.TradingServices, "Trading Services", "", "Service which provides trading services")
    Container(TraderX.SoftwareSystems.TraderX.Containers.AccountsService, "Accounts Service", "", "Service which provides account management")
    Container(TraderX.SoftwareSystems.TraderX.Containers.PositionService, "Position Service", "", "Server process which processes trading activity and updates positions")
    Container(TraderX.SoftwareSystems.TraderX.Containers.PeopleService, "People Service", "", "Service which provides user details management")
}
System(TraderX.SoftwareSystems.UserDirectory, "User Directory", "")

Rel(TraderX.SoftwareSystems.TraderX.Containers.TradeProcessor, TraderX.SoftwareSystems.TraderX.Containers.TradeFeed, "Receive Trade Request\nSend Updates To Trades\nSend Updates To Positions\n[SocketIO]", $tags='protocol:socketio')
Rel(TraderX.SoftwareSystems.TraderX.Containers.TradeProcessor, TraderX.SoftwareSystems.TraderX.Containers.TraderXDB, "Select Current Positions\nSave Trade State\nSave Position State\n[JDBC]", $tags='protocol:jdbc')
Rel(TraderX.SoftwareSystems.TraderX.Containers.WebClient, TraderX.SoftwareSystems.TraderX.Containers.WebGUI, "Create Trade\nCancel Trade\nLoad Account\nLoad Trades For Account\nLoad Positions For Account\nCreate Account\nUpdate Account\nType Ahead People Search\n[HTTPS]", $tags='protocol:https')
Rel(TraderX.SoftwareSystems.TraderX.Containers.WebGUI, TraderX.SoftwareSystems.TraderX.Containers.ReferenceDataService, "Get Securities\n[HTTPS]", $tags='protocol:https')
Rel(TraderX.SoftwareSystems.TraderX.Containers.WebGUI, TraderX.SoftwareSystems.TraderX.Containers.TradingServices, "Create Trade\nCancel Trade\n[HTTPS]", $tags='protocol:https')
Rel(TraderX.SoftwareSystems.TraderX.Containers.TradingServices, TraderX.SoftwareSystems.TraderX.Containers.TraderXDB, "Insert Trade Request\nUpdate Trade Status\n[JDBC]", $tags='protocol:jdbc')
Rel(TraderX.SoftwareSystems.TraderX.Containers.TradingServices, TraderX.SoftwareSystems.TraderX.Containers.TradeFeed, "Send Trade Request\nSend Updates To Trades\n[SocketIO]", $tags='protocol:socketio')
Rel(TraderX.SoftwareSystems.TraderX.Containers.WebGUI, TraderX.SoftwareSystems.TraderX.Containers.AccountsService, "Get Accounts\nCreate Account\nUpdate Account\n[HTTPS]", $tags='protocol:https')
Rel(TraderX.SoftwareSystems.TraderX.Containers.WebGUI, TraderX.SoftwareSystems.TraderX.Containers.PositionService, "Get Trades For Account\nGet Positions For Account\n[HTTPS]", $tags='protocol:https')
Rel(TraderX.SoftwareSystems.TraderX.Containers.WebGUI, TraderX.SoftwareSystems.TraderX.Containers.PeopleService, "Get People Data\n[HTTPS]", $tags='protocol:https')
Rel(TraderX.SoftwareSystems.TraderX.Containers.PeopleService, TraderX.SoftwareSystems.UserDirectory, "Select People Data\n[LDAP]", $tags='protocol:ldap')
Rel(TraderX.SoftwareSystems.TraderX.Containers.WebGUI, TraderX.SoftwareSystems.TraderX.Containers.TradeFeed, "Receive Updates To Trades\nReceive Updates To Positions\n[WebSocket]", $tags='protocol:websocket')
Rel(TraderX.SoftwareSystems.TraderX.Containers.WebGUI, TraderX.SoftwareSystems.TraderX.Containers.WebClient, "Send Trade And Position Status Updates\n[WebSocket]", $tags='protocol:websocket')


SHOW_LEGEND()
@enduml
